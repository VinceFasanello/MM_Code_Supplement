}
# ------------------------------------------------------------------------------
# view and save ----------------------------------------------------------------
write.csv(mypower.lm, file = "000_Table_S5.csv")
# ------------------------------------------------------------------------------
rm(mytemp, i, mypower.lm)
my <- myfa[order(myfa$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
mymod <- lmer(scale(deltafit) ~ scale(ccdeltafit) + treatment + (1|bctID), weights = rdeltafit, data = my, control=lmerControl(optimizer ="bobyqa",optCtrl=list(maxfun=2e4))); summary(mymod) # problems with convergence here...solved with an optimizer and some extra iterations.
# mymod <- lm(my$deltafit ~ my$ccdeltafit + my$treatment, weights = my$rdeltafit);r.squaredGLMM(mymod) # get the r2 for the lm version of the model if desired.
hist(residuals(mymod), breaks = 100)
hist(expand_residuals(mymod, my$rdeltafit), breaks = 100) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
anova(mymod) # test term significance
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------=
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, show.r2 = F, file = "000_Table_S8.html") # r2 on the lm version of htis model is 0.3059, adjusted = 0.299
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
mymod <- lmer((deltafit) ~ (ccdeltafit) + treatment + (1|bctID), weights = rdeltafit, data = my, control=lmerControl(optimizer ="bobyqa",optCtrl=list(maxfun=2e4))) # problems with convergence here...solved with an optimizer and some extra iterations.
myx <- my$treatment
myy <- my$deltafit*100
myr <- my$rdeltafit
myc <- my$treatment
mytitle <- NULL
myylab <- "Fitness Change"
myxlab <- "Treatment"
myoutline <-  "grey20"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(2,3,5,6), y=c(14,55,15,46), label = c("**", "***", "***", "*"), size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_4.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, weights)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# Review Results --------------------------------------------------------------
# my[my$fixed == T,] # these are the fixed wells
# my$treatment[my$fixed == T] # these are the treatments of the fixed wells
paste0("proportion of wells that attained fixation (n=76 total wells)= ", nrow(my[my$fixed == T,])/nrow(my))  # prop fixed
# CM diploid 1:1000
myt <- my[my$treatment == "CMdiploid0.001",]; paste0("n wells in CMdiploid0.001 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# CM haploid 1:1000
myt <- my[my$treatment == "CMhaploid0.001",]; paste0("n wells in CMhaploid0.001 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# CM+Salt diploid 1:1000
myt <- my[my$treatment == "CM+Saltdiploid0.001",]; paste0("n wells in CM+Saltdiploid0.001 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# CM+Ethanol 1:1000
myt <- my[my$treatment == "CM+Ethanoldiploid0.001",]; paste0("n wells in CM+Ethanoldiploid0.001 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# CM diploid 1:250
myt <- my[my$treatment == "CMdiploid0.004",]; paste0("n wells in CMdiploid0.004 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# CM diploid 1:4000
myt <- my[my$treatment == "CMdiploid0.00025",]; paste0("n wells in CMdiploid0.00025 = ",nrow(myt)) #  wells
paste0("number of fixed wells in treatment = ",nrow(myt[myt$fixed,])) # number fixed
paste0("proportion of fixed wells in treatment = ",nrow(myt[myt$fixed,])/nrow(myt)) # prop fixed
# -----------------------------------------------------------------------------
rm(my, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tmaxdev ~ my$treatment + my$ccmaxdev_t0 + my$diff0, weights = my$rmaxdev_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$tmaxdev ~ my$treatment + my$diff0, weights = my$rmaxdev_rt0); summary(mymod) # diff 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$tmaxdev ~ my$treatment + my$ccmaxdev, weights = my$rmaxdev); summary(mymod) # drop c as least significant term
mymod <- lm(my$tmaxdev ~ my$treatment, weights = my$rmaxdev); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxdev), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S9.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tmaxdev
myr <- my$rmaxdev
myc <- my$treatment
mytitle <- NULL
myylab <- "T-MAX (Generation)"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
# geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(3), y=c(255), label = "*", size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S4.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mmaxdev ~ my$treatment + my$ccmaxdev_t0 + my$diff0, weights = my$rmaxdev_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$mmaxdev ~ my$treatment + my$diff0, weights = my$rmaxdev_rt0); summary(mymod) # diff 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$mmaxdev ~ my$treatment + my$ccmaxdev, weights = my$rmaxdev); summary(mymod) # drop c as least significant term
mymod <- lm(my$mmaxdev ~ my$treatment, weights = my$rmaxdev); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxdev), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S10.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mmaxdev
myr <- my$rmaxdev
myc <- my$treatment
mytitle <- NULL
myylab <- "M-MAX"
myxlab <- "Treatment"
myoutline <-  "grey20"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(3,6), y=c(0.91,0.765), label = c("***", "**"), size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S5.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tmaxrate ~ my$treatment + my$ccmaxrate_t0 + my$diff0, weights = my$rmaxrate_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$tmaxrate ~ my$treatment + my$diff0, weights = my$rmaxrate_rt0); summary(mymod) # diff 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$tmaxrate ~ my$treatment + my$ccmaxrate, weights = my$rmaxrate); summary(mymod) # drop c as least significant term
mymod <- lm(my$tmaxrate ~ my$treatment, weights = my$rmaxrate); summary(mymod) # Final model!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxrate), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S11.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tmaxrate
myr <- my$rmaxrate
myc <- my$treatment
mytitle <- NULL
myylab <- "T-MAX-RATE"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
# geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(6), y=c(257), label = "***", size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S6.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mmaxrate ~ my$treatment + my$ccmaxrate_t0 + my$diff0, weights = my$rmaxrate_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$mmaxrate ~ my$treatment + my$diff0, weights = my$rmaxrate_rt0); summary(mymod) # diff 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$mmaxrate ~ my$treatment + my$ccmaxrate, weights = my$rmaxrate); summary(mymod) # drop c as least significant term
mymod <- lm(my$mmaxrate ~ my$treatment, weights = my$rmaxrate); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxrate), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S12.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mmaxrate
myr <- my$rmaxrate
myc <- my$treatment
mytitle <- NULL
myylab <-"M-MAX-RATE"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(4), y=c(0.0325), label = "*", size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S7.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tmaxdiff ~ my$treatment + my$ccmaxdiff_t0 + my$diff0, weights = my$rmaxdiff_rt0); summary(mymod) # drop c as least significant term
mymod <- lm(my$tmaxdiff ~ my$treatment + my$diff0, weights = my$rmaxdiff_rt0); summary(mymod)# # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rtcc), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S13.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tmaxdiff
myr <- my$rmaxdiff_rt0
myc <- my$treatment
mytitle <- NULL
myylab <- "T-MAX-DIFF"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S8.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mmaxdiff ~ my$treatment + my$ccmaxdiff_t0 + my$diff0, weights = my$rmaxdiff_rt0); summary(mymod) # drop c as least significant term
mymod <- lm(my$mmaxdiff ~ my$treatment + my$diff0, weights = my$rmaxdiff_rt0); summary(mymod)# # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rtcc), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S14.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mmaxdiff
myr <- my$rmaxdiff_rt0
myc <- my$treatment
mytitle <- NULL
myylab <- "M-MAX-DIFF"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(3,6), y=c(0.525), label = "***", size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S9.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tcc ~ my$treatment + my$cctcc_t0 + my$diff0, weights = my$rtcc_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$tcc ~ my$treatment + my$diff0, weights = my$rtcc_rt0); summary(mymod) # diff 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$tcc ~ my$treatment + my$cctcc, weights = my$rtcc); summary(mymod) # drop c as least significant term
mymod <- lm(my$tcc ~ my$treatment, weights = my$rtcc); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rtcc), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_Table_S15.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tcc
myr <- my$rtcc
myc <- my$treatment
mytitle <- NULL
myylab <- "Total Change in Abundance"
myxlab <- "Treatment"
mypalette <- setpalette
mytextsize <- 8
myheight <- 3.5
mywidth <- 7
myptsize <- ((((myr/max(myr))*10)*((myheight*mywidth)/(7^2))) - min(((myr/max(myr))*10)*((myheight*mywidth)/(7^2))))+1
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_segment(x=5.90, xend=6.10, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.90, xend=5.10, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.90, xend=4.10, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.90, xend=3.10, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.90, xend=2.10, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.90, xend=1.10, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_rug(sides = "b" , position = position_nudge(x=-0.75), alpha = myptalpha)+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)+
scale_x_discrete(labels = c("CM \n Diploid \n 0.001", "CM+EtOH \n Diploid \n 0.001", "CM+NaCl \n Diploid \n 0.001", "CM \n Diploid \n 0.00025", "CM \n Diploid \n 0.004", "CM \n Haploid \n 0.001")) +
theme(axis.title.y = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.title.x = element_text(size = 8, face = "bold", margin = margin(0,0,0,0, "pt")))+
theme(axis.text.y = element_text(size = 8, angle = 0))+
theme(axis.text.x = element_text(size = 8, angle = 0))+
annotate("text", x=c(2,4,6), y=c(0.0275,0.06825,0.026), label = c("*","**","*"), size = 8, fontface = "bold")
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf(file = "000_Figure_S10.pdf", width = mywidth, height = myheight); p; dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p)
citation("weights")
citation("lme4")
citation(ggplot2 )
citation("ggplot2")
citation("sjPlot")
citation("plyr")
