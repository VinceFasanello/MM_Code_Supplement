nrow(myrest[myrest$p1s_h.adj <= 0.01, ])/nrow(myrest)
# CM diploid 1:4000
myrest <- myres[myres$treatment == "CMdiploid0.00025",]; nrow(myrest)
nrow(myrest[myrest$p1s_h.adj <= 0.01, ])
nrow(myrest[myrest$p1s_h.adj <= 0.01, ])/nrow(myrest)
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- myres$m_deltafit
myr <- myres$m_rdeltafit
myc <- myres$color
mybinwidth <- 0.01
mytitle <- "Fitness Assays: Test for increase in barcode fitness from \n generation 0 to generation 250"
myylab <- "Count"
myxlab <- "Fitness Change"
myhighlight1 <- "black"
myhighlight2 <- setpalette[1]
myhighlight3 <- setpalette[2]
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
mypalette <- setpalette
p <- ggplot(myres, aes(x=myx, color = myc, fill = myc)) +
geom_histogram(alpha = myfillapha, position = "stack", binwidth = mybinwidth) +
geom_vline(xintercept = weighted.mean(myx, myr), linetype = "dashed", color = myhighlight) +
geom_vline(xintercept = weighted.mean(myx[myc == "fdr > 0.05"], myr[myc == "fdr > 0.05"]), linetype = "dashed", color = myhighlight2) +
geom_vline(xintercept = weighted.mean(myx[myc == "fdr <= 0.05"], myr[myc== "fdr <= 0.05"]), linetype = "dashed", color = myhighlight3) +
geom_rug()+
scale_color_manual(values =mypalette) +
scale_fill_manual(values =mypalette) +
#theme(legend.position="none") + # to turn off the legend if desired.
theme_classic() +
ggtitle(mytitle)+ ylab(myylab)+ xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_deltafit_increase.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, myres, myrest, p)
my <- myfa[order(myfa$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
mymod <- lmer(my$deltafit ~ my$ccdeltafit + my$treatment + (1|my$bctID), weights = my$rdeltafit);summary(mymod) # test for effect of treatment, contam on fitness change
# mymod <- lm(my$deltafit ~ my$ccdeltafit + my$treatment, weights = my$rdeltafit);r.squaredGLMM(mymod) # get the r2 for the lm version of the model if desired.
hist(residuals(mymod), breaks = 100)
hist(expand_residuals(mymod, my$rdeltafit), breaks = 100) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
anova(mymod) # test term significance
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------=
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, show.r2 = F, file = "000_deltafit_fitness_predictedby_treatment.html") # r2 on the lm version of htis model is 0.3059, adjusted = 0.299
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$deltafit
myr <- my$rdeltafit
myc <- my$treatment
mytitle <- "Fitness Change over 250 generations of experimental evolution"
myylab <- "Change in fitness"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_deltafit_fitness_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, weights)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# Review Results --------------------------------------------------------------
my[my$fixed == T,] # these are the fixed wells
nrow(my[my$fixed == T,])/nrow(my)  # prop fixed
my$treatment[my$fixed == T] # these are the treatments of the fixed wells
# CM diploid 1:1000
myt <- my[my$treatment == "CMdiploid0.001",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# CM haploid 1:1000
myt <- my[my$treatment == "CMhaploid0.001",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# CM+Salt diploid 1:1000
myt <- my[my$treatment == "CM+Saltdiploid0.001",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# CM+Ethanol 1:1000
myt <- my[my$treatment == "CM+Ethanoldiploid0.001",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# CM diploid 1:250
myt <- my[my$treatment == "CMdiploid0.004",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# CM diploid 1:4000
myt <- my[my$treatment == "CMdiploid0.00025",]; nrow(myt) # diploid wells
nrow(myt[myt$fixed,]) # number fixed
nrow(myt[myt$fixed,])/nrow(myt) # prop fixed
# -----------------------------------------------------------------------------
rm(my, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mmaxdev ~ my$treatment + my$ccmaxdev_t0 + my$ineq0, weights = my$rmaxdev_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$mmaxdev ~ my$treatment + my$ineq0, weights = my$rmaxdev_rt0); summary(mymod) # ineq 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$mmaxdev ~ my$treatment + my$ccmaxdev, weights = my$rmaxdev); summary(mymod) # drop c as least significant term
mymod <- lm(my$mmaxdev ~ my$treatment, weights = my$rmaxdev); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxdev), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_mmax_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mmaxdev
myr <- my$rmaxdev
myc <- my$treatment
mytitle <- "Maximum deviation in Barcode Proportion (from starting conditions)\n Across 250-generations of Exp. Evolution"
myylab <- "Maximum deviation in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_mmax_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tmaxdev ~ my$treatment + my$ccmaxdev_t0 + my$ineq0, weights = my$rmaxdev_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$tmaxdev ~ my$treatment + my$ineq0, weights = my$rmaxdev_rt0); summary(mymod) # ineq 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$tmaxdev ~ my$treatment + my$ccmaxdev, weights = my$rmaxdev); summary(mymod) # drop c as least significant term
mymod <- lm(my$tmaxdev ~ my$treatment, weights = my$rmaxdev); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rmaxdev), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_tmax_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tmaxdev
myr <- my$rmaxdev
myc <- my$treatment
mytitle <- "Time of Maximum deviation in Barcode Proportion \n (from starting conditions) Across 250-generations of Exp. Evolution"
myylab <- "Time of Maximum deviation in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b", position = position_jitter(width=0, height=2.5))+
scale_color_manual(values =mypalette) +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_tmax_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mabsmaxrc ~ my$treatment + my$ccabsmaxrc_t0 + my$ineq0, weights = my$rabsmaxrc_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$mabsmaxrc ~ my$treatment + my$ineq0, weights = my$rabsmaxrc_rt0); summary(mymod) # ineq 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$mabsmaxrc ~ my$treatment + my$ccabsmaxrc, weights = my$rabsmaxrc); summary(mymod) # drop c as least significant term
mymod <- lm(my$mabsmaxrc ~ my$treatment, weights = my$rabsmaxrc); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rabsmaxrc), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_mmaxrate_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mabsmaxrc
myr <- my$rabsmaxrc
myc <- my$treatment
mytitle <-"Maximum rate of change in Barcode Proportion \n Across 250-generations of Exp. Evolution"
myylab <-"Maximum rate of change in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_mmaxrate_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tabsmaxrc ~ my$treatment + my$ccabsmaxrc_t0 + my$ineq0, weights = my$rabsmaxrc_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$tabsmaxrc ~ my$treatment + my$ineq0, weights = my$rabsmaxrc_rt0); summary(mymod) # ineq 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$tabsmaxrc ~ my$treatment + my$ccabsmaxrc, weights = my$rabsmaxrc); summary(mymod) # drop c as least significant term
mymod <- lm(my$tabsmaxrc ~ my$treatment, weights = my$rabsmaxrc); summary(mymod) # Final model!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$rabsmaxrc), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_tmaxrate_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tabsmaxrc
myr <- my$rabsmaxrc
myc <- my$treatment
mytitle <-"Time of Maximum rate of change in Barcode Proportion \n Across 250-generations of Exp. Evolution"
myylab <-"Time of Maximum rate of change in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b", position = position_jitter(width=0, height=2.5))+
scale_color_manual(values =mypalette) +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_tmaxrate_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$acbp ~ my$treatment + my$ccacbp_t0 + my$ineq0, weights = my$racbp_rt0); summary(mymod) # drop c as least significant term
# mymod <- glm(my$acbp ~ my$treatment + my$ineq0, weights = my$racbp_rt0); summary(mymod) # ineq 0 still not significant...run the model set without it.
# without:
# mymod <- glm(my$acbp ~ my$treatment + my$ccacbp, weights = my$racbp); summary(mymod) # drop c as least significant term
mymod <- lm(my$acbp ~ my$treatment, weights = my$racbp); summary(mymod) # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$racbp), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_cumulativechange_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$acbp
myr <- my$racbp
myc <- my$treatment
mytitle <- "Total accumulated change in Barcode Proportion \n Across 250-generations of Exp. Evolution"
myylab <- "Total accumulated change in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_cumulativechange_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$mmineq ~ my$treatment + my$ccmineq_t0 + my$ineq0, weights = my$rmineq_rt0); summary(mymod) # drop c as least significant term
mymod <- lm(my$mmineq ~ my$treatment + my$ineq0, weights = my$rmineq_rt0); summary(mymod)# # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$racbp), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_mmaxdif_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$mmineq
myr <- my$rmineq_rt0
myc <- my$treatment
mytitle <- "Magnitude Maximum Inequality in Barcode Proportion \n Across 250-generations of Exp. Evolution"
myylab <- "Magnitude Maximum Inequality in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_mmaxdif_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
my <- myevo[order(myevo$bctID),] # placeholder dataframe
# model & diagnostic plots ----------------------------------------------------
# with initial proportions included in the model:
# mymod <- glm(my$tmineq ~ my$treatment + my$ccmineq_t0 + my$ineq0, weights = my$rmineq_rt0); summary(mymod) # drop c as least significant term
mymod <- lm(my$tmineq ~ my$treatment + my$ineq0, weights = my$rmineq_rt0); summary(mymod)# # FINAL MODEL!
anova(mymod) # test term significance with an lm
hist(residuals(mymod), breaks = 25)
hist(expand_residuals(mymod, my$racbp), breaks = 25) # this more accurately represents the distribution of residuals in the model output. -- tails look fine here.
plot(mymod) # check model fit
summary(mymod)$r.squared # for R2 value
summary(mymod)$adj.r.squared # for adjusted R2 value
# -----------------------------------------------------------------------------
# model output -----------------------------------------------------------------
tab_model(mymod, digits = 5, digits.p = 5, show.stat = T, wrap.labels = 100, file = "000_tmaxdif_predictedby_treatment.html")
# -----------------------------------------------------------------------------
# Visualize -------------------------------------------------------------------
myx <- my$treatment
myy <- my$tmineq
myr <- my$rmineq_rt0
myc <- my$treatment
mytitle <- "Generation Maximum Inequality in Barcode Proportion \n Across 250-generations of Exp. Evolution"
myylab <- "Generation Maximum Inequality in barcode proportion"
myxlab <- "Evolutionary Treatment"
myoutline <-  "grey50"
myfill <-  "grey90"
myfillapha <- 0.35
myptalpha <- 0.35
mylinealpha <- 0.35
myptsize <- (myr/max(myr))*10+1
mypalette <- setpalette
p <- ggplot(my, aes(x=myx, y=myy, weight = myr, color = myc)) +
geom_violin(color = myoutline, fill = myfill, draw_quantiles = NULL, inherit.aes = F, aes( x=myx, y=myy), trim = T) +
geom_segment(x=5.75, xend=6.25, y = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), yend = weighted.mean(myy[myx == "CMhaploid0.001"], myr[myx == "CMhaploid0.001"]), color = myoutline) +
geom_segment(x=4.75, xend=5.25, y = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), yend = weighted.mean(myy[myx == "CMdiploid0.004"], myr[myx == "CMdiploid0.004"]), color = myoutline) +
geom_segment(x=3.75, xend=4.25, y = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), yend = weighted.mean(myy[myx == "CMdiploid0.00025"], myr[myx == "CMdiploid0.00025"]), color = myoutline) +
geom_segment(x=2.75, xend=3.25, y = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Saltdiploid0.001"], myr[myx == "CM+Saltdiploid0.001"]), color = myoutline) +
geom_segment(x=1.75, xend=2.25, y = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), yend = weighted.mean(myy[myx == "CM+Ethanoldiploid0.001"], myr[myx == "CM+Ethanoldiploid0.001"]), color = myoutline) +
geom_segment(x=0.75, xend=1.25, y = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), yend = weighted.mean(myy[myx == "CMdiploid0.001"], myr[myx == "CMdiploid0.001"]), color = myoutline) +
geom_jitter(width =0.15, height = 0, alpha = myptalpha, size = myptsize) +
geom_rug(sides = "b", position = "jitter" )+
scale_color_manual(values =mypalette) +
geom_hline(yintercept = 0, lty = "dotted") +
coord_flip() +
theme_classic()+
theme(legend.position="none") +
ggtitle(mytitle) + ylab(myylab) + xlab(myxlab)
p
# -----------------------------------------------------------------------------
# figure output ---------------------------------------------------------------
pdf("000_tmaxdif_predictedby_treatment.pdf")
p
dev.off()
# -----------------------------------------------------------------------------
rm(my, mymod, p, i, myt)
